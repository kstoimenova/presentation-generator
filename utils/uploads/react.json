[{
        "heading": "Какво е React?",
        "type": "withText",
        "text": "React, също срещан под наименование ReactJS е JavaScript библиотека с отворен код, използвана за изграждане на потребителски интерфейси. React играе изключително важна роля в изграждането на модерни уебсайтове и уеб приложения. React може да се използва като основа за разработката на SPA(Single Page Application) или мобилни приложения. За пример едни от най-големите компании, които освен че използват React, също така го и разработват, са Facebook и Instagram."
    },
  {
        "heading": "DOM структура и как React работи с нея",
        "type": "withText",
        "text": "Виртуалното дърво - Virtual DOM(VDOM) е концепция, въведена в някои JavaScript библиотеки, включително React, която се изгражда над браузър API-тата. Идеята ѝ тук е да държи виртуална версия на истинския DOM в паметта и да се синхронизира с него чрез ReactDOM библиотеката например. Този процес се нарича reconciliation(изравняване). По този начин не се грижим за ръчна промяна на DOM елементите и прихващане на някои събития, а единствено оказваме в какво състояние(state) искаме те да бъдат. Библиотеката се грижи за останалото."
    },
{
        "heading": "Свързани технологии",
        "type": "withList",
        "list": [
            "React Router DOM - набор от навигационни компоненти като Link, Route, Redirect и други.",
            "Redux - предоставя споделен контейнер за запазване на състоянието за повече от една компонента. ",
            "Reflux - сходно като идея на Redux. Използва actions и stores за да менажира кога компонента трябва да се промени.",
            "Semantic - набор от готови стилизирани компоненти за приятен дизайн на страници.",
            "Material - сходно на Semantic, но с по-различен дизайн."
        ]
    },
{
        "heading": "Дефиниране на начално състояние на компонента",
        "type": "withCodeblock",
        "codeblock":"constructor(props) { \nsuper(props); \nthis.state = { \nposts: [], \ncomments: [] \n}; \n}"
    }
]